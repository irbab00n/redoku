/* PUZZLE VALUES */
$puzzle-grid-dimension: 540px;
$side-track-dimension: 280px;


/* PUZZLE LAYOUT WRAPPER */
.puzzle-layout-wrapper {
  @include flex;
  @include perspective(1100px);
}

/* PUZZLE LAYOUT SIDE TRACKS SHARED */
.puzzle-layout-wrapper > .left-track, .puzzle-layout-wrapper > .right-track {
  width: $side-track-dimension;

  & > .inner-wrapper {
    width: 100%;
    padding: 10px;
  }
}

/* Puzzle Loading */
.puzzle-loading-wrapper {
  @include flex; @include align-center; @include justify-center;
  height: 628px;
  width: 1100px; // @todo this will need to change once we add in mobile responsivity
}

/* Puzzle Container */
.puzzle-container {
  @include transition(0.2s);
  display: flex;
  flex-direction: column;
  align-items: center;

  &.failure {
    @include animation-duration(0.6s);
    @include animation-iteration(1);
    @include animation-name(puzzle-failure);
    @include animation-timing-function(ease-in-out);
  }

  &.victory {
    @include animation-duration(5s);
    @include animation-iteration(infinite);
    @include animation-name(puzzle-victory);
    @include animation-timing-function(linear);
  }
}

/* Puzzle Grid */
.puzzle-grid {
  @include grid;
  width: $puzzle-grid-dimension;
  height: $puzzle-grid-dimension;
  grid-template-columns: auto auto auto auto auto auto auto auto auto;
  grid-template-rows: auto auto auto auto auto auto auto auto auto;
  padding: 10px;
}

.grid-item {
  @include flex; @include align-center; @include justify-center;
  position: relative;
}

.puzzle-number-pad {
  @include flex; @include align-center; @include flex-wrap(wrap);
  @include box-shadow(0px, 0px, 12px, 0px, rgba(25, 25, 25, 0.6));
  // @include box-shadow(0px, 0px, 6px, 0px, $indigo-700);
  list-style: none;
  background-color: $white;
  position: absolute;
  width: 150px;
  z-index: 4;
  top: 50px;
  padding: 0;
}

.puzzle-number-pad > li {
  @include transition(0.2s);
  @include flex; @include align-center; @include justify-center;
  font-family: Helvetica, sans-serif;
  font-size: 24px; font-weight: 500;
  height: 50px;
  width: 50px;

  &:hover {
    cursor: pointer;
    background-color: $indigo-100;
  }

  &:active {
    background-color: $indigo-50 !important;
  }
}
.puzzle-number-pad > li.clear {
  width: 150px;
  font-size: 20px;
}

.puzzle-number-pad > li.is-note {
  background-color: $blue-400;
}

.puzzle-box {
  @include transition(0.1s);
  @include box-shadow(0px, 0px, 4px, 0px, rgba(25, 25, 25, 0.4));
  cursor: pointer;
  height: 90%;
  width: 90%;
  color: $indigo-700;
  font-family: Helvetica, sans-serif;
  font-size: 36px; font-weight: 500;
  text-align: center;
  border: none;
  border-radius: 4px;
  position: relative;
  top: 0;
  left: 0;

  &::placeholder {
    color: $indigo-300;
  }

  &:hover, &:focus {
    @include box-shadow(0px, 0px, 6px, 0px, $cosbytes-blue);
    outline-color: $indigo-700;
    height: 94%;
    width: 94%;
  }

  &.has-notes-grid-bg-normal {
    background: $white; /* Old browsers */
    background: -moz-linear-gradient(-45deg, $white 88%, rgba(78,163,229,1) 88%, rgba(78,163,229,1) 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(-45deg, $white 88%,rgba(78,163,229,1) 88%,rgba(78,163,229,1) 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(135deg, $white 88%,rgba(78,163,229,1) 88%,rgba(78,163,229,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1e5799', endColorstr='#4ea3e5',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
  }

  &.has-notes-grid-bg-alt {
    background: $indigo-100; /* Old browsers */
    background: -moz-linear-gradient(-45deg, $indigo-100 88%, rgba(78,163,229,1) 88%, rgba(78,163,229,1) 100%); /* FF3.6-15 */
    background: -webkit-linear-gradient(-45deg, $indigo-100 88%,rgba(78,163,229,1) 88%,rgba(78,163,229,1) 100%); /* Chrome10-25,Safari5.1-6 */
    background: linear-gradient(135deg, $indigo-100 88%,rgba(78,163,229,1) 88%,rgba(78,163,229,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1e5799', endColorstr='#4ea3e5',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
  }

 
}

.grid-bg-normal {
  background-color: $white;
}

.grid-bg-alt {
  background-color: $indigo-100;
}

.initial-bg {
  color: $blue-grey-900;
  font-weight: 600;
  outline-color: $red;
}


/* PUZZLE ANIMATIONS */

@keyframes puzzle-failure {
  0%    { transform: translateX(0px) rotateY(0deg); }
  23%   { transform: translateX(-6px) rotateY(-3deg);}
  48%   { transform: translateX(4px) rotateY(3deg); }
  73%   { transform: translateX(-4px) rotateY(-3deg); }
  98%   { transform: translateX(0px) rotateY(0deg);; }
  100%  { transform: translateX(0px); }
}

@keyframes puzzle-victory {
  // 0%    { transform: translateX(0px) translateY(0px); }
  0%    { transform: translate(0px, 0px) rotateY(0deg); }
  4%    { transform: translate(0px, 12px) rotateY(-3deg); }
  8%    { transform: translate(-10px, 0px) rotateY(0deg); }
  12%   { transform: translate(-10px, 12px) rotateY(-3deg); }
  16%   { transform: translate(-20px, 0px) rotateY(0deg); }
  20%   { transform: translate(-20px, 12px); }
  25%   { transform: translate(-20px, 0px);}
  30%   { transform: translate(-20px, 12px)  rotateY(3deg); }
  34%   { transform: translate(-10px, 0px) rotateY(0deg); }
  38%   { transform: translate(-10px, 12px) rotateY(3deg); }
  42%   { transform: translate(0px, 0px) rotateY(0deg); }
  46%   { transform: translate(0px, 12px); }
  50%   { transform: translate(0px, 0px); }
  54%   { transform: translate(0px, 12px) rotateY(3deg); }
  58%   { transform: translate(10px, 0px) rotateY(0deg); }
  62%   { transform: translate(10px, 12px) rotateY(3deg); }
  66%   { transform: translate(20px, 0px) rotateY(0deg); }
  70%   { transform: translate(20px, 12px); }
  75%   { transform: translate(20px, 0px); }
  80%   { transform: translate(20px, 12px) rotateY(-3deg); }
  84%   { transform: translate(10px, 0px) rotateY(0deg); }
  88%   { transform: translate(10px, 12px) rotateY(-3deg); }
  92%   { transform: translate(0px, 0px) rotateY(0deg); }
  96%   { transform: translate(0px, 12px); }
  100%  { transform: translate(0px, 0px) rotateY(0deg); }
}